## 문제 17.
## 최소 10개 이상 최대 20개 이하의 숫자로 구성된 숫자목록이 배열 혹은 리스트 형태로 제공된다.
## 숫자목록 : 1,3,4,5,7,9,2,3,4,7

## 아래의 순서로 숫자목록의 숫자를 교환하여 재배치한다.
## 1) 숫자목록의 앞에서부터 4개의 숫자를 선택한다.
##    목록에서 숫자 선택 : [1,3,4,5],7,9,2,3,4,7
## 2) 선택된 4개의 숫자의 합을 구한다.
##    4개의 숫자 합 : [1,3,4,5],7,9,2,3,4,7 => 13
## 3) 첫 번째와 두 번째 숫자를 교환하고 세 번째와 네 번째 숫자를 교환한다.
##    숫자 교환 : [3,1,5,4],7,9,2,3,4,7
## 4) 오른쪽으로 한칸씩 이동하여 순서대로 1,2,3번 과정을 반복해 숫자목록의 숫자를 재배치한다.
## 예) [1,3,4,5],7,9,2,3,4,7 =>
##     [3,1,5,4],7,9,2,3,4,7 =>
##     3,[1,5,4,7],9,2,3,4,7 -> …

## 맨 마지막까지 도달했을 때 선택된 4개의 숫자의 합이 가장 큰 값과 그 때의 숫자목록을 출력

# my_tu= (13, [1,3,4,5])
# tup_lst = 튜플을 리스트로 저장

my_lst = [1, 3, 4, 5, 7, 9, 2, 3, 4, 7]
# my_str = '10 15 3 5 9 5 7 8 9 15 44 54 15 67 32 25 48 98 44 56' # 답 159
# my_lst = my_str.split(' ')
# my_lst = [int(i) for i in my_lst]
# print(my_lst)

tup_lst = list()

# print(my_lst)

for i in range(len(my_lst)-3):
    tmp_lst = my_lst[i:i+4]
    tup_lst.append((sum(tmp_lst), tmp_lst))
    # 첫번째0 <=> 두번째1
    tmp = my_lst[i+1]
    my_lst[i+1] = my_lst[i]
    my_lst[i] = tmp
    # 세번째2 <=> 네번쩨3
    tmp = my_lst[i+3]
    my_lst[i+3] = my_lst[i+2]
    my_lst[i+2] = tmp

    # print(my_lst)

# print(tup_lst)  # [(13, [1, 3, 4, 5]), (17, [1, 5, 4, 7]), (21, [1, 7, 4, 9]),

# 선택된 4개의 숫자의 합이 가장 큰 값과 그 때의 숫자목록을 출력
tup_lst2 = sorted(tup_lst, key=lambda x: x[0], reverse=True)

print("가장 큰 숫자의 합은 {}이고, ".format(tup_lst2[0][0]))
print("그때의 숫자목록은 {} 이다.".format(tup_lst2[0][1]))


# test1
# my_lst = [1, 3, 4, 5, 7, 9, 2, 3, 4, 7]
# 가장 큰 숫자의 합은 21이고,
# 그때의 숫자목록은 [1, 7, 4, 9] 이다.

# test2
# my_str = '10 15 3 5 9 5 7 8 9 15 44 54 15 67 32 25 48 98 44 56'
# 가장 큰 숫자의 합은 159이고,
# 그때의 숫자목록은 [10, 48, 3, 98] 이다.