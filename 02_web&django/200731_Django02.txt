- 기본적인 project 생성과 설정
- Model 작업

=> python manage.py runserver


1.
=> 클라이언트가 특정 URL (http://localhost:8000/polls)를 이용해서 서버 프로그램을 호출하면
	URLConf 처리를 통해서 호출할 View를 결정
	
	1) 
	URLConf라는게 특정 파일에 저장되어 있는 내용인데
	# C:\python-Django\MyFirstWebPoll\mysite\settings.py
	
	ROOT_URLCONF = 'mysite.urls'
	->C:\python-Django\MyFirstWebPoll\mysite\urls.py
	
	from django.urls import path, include
	
	# http://localhost:8000/admin   => 관리자페이지
	# http://localhost:8000/polls   => 모든 투표 질문을 화면에 출력
	# 2번째 인자는 입력 URL을 처리할 함수를 명시 (View 안의 함수) (실행x, 명시)


	# urlpattern을 명시할 때는, 위에서부터 경로에 대한 함수를 찾아 호출하기 때문에 순서가 중요하다.
	urlpatterns = [
		path('admin/', admin.site.urls),
		# polls에 대한 urls는 polls.urls 가서 찾도록 명시해준다.
		path('polls/', include('polls.urls'), name="index"),
	]

	2) 
	url.py => polls/url.py copy 
	from django.urls import path
	from . import views
	# . 현재 경로

	app_name = "polls"

	# http://localhost:8000/polls/

	# urlpattern을 명시할 때는, 위에서부터 경로에 대한 함수를 찾아 호출하기 때문에 순서가 중요하다.
	urlpatterns = [
		path('', views.index, name="index"),
		# path('polls/insert', views.insert, name="insert"),
		# path('polls/delete', views.delete, name="delete"),
	]

2. 
	1) 
	C:\python-Django\MyFirstWebPoll\polls>mkdir templates
	
	C:\python-Django\MyFirstWebPoll\polls\templates\index.html
	
	2)
	# C:\python-Django\MyFirstWebPoll\polls\view.py
	
	# 클라이언트가 서버에 요청을 보내는 작업 => request
	# 클라이언트가 서버에 요청을 보낼 때 여러가지 정보가 같이 서버에 제공된다.
	# => 이 내용을 request라는 객체로 만들어서 사용
	# 서버가 클라이언트에게 결과를 보내는 작업 => response
	
	from django.shortcuts import render, get_object_or_404
	from .models import Question

	def index(request):
		# 로직 처리 코드

		# 새로 그려진, 렌더링된 html 코드를 반환해준다.
		# templates 폴더 안에 든 index.html을 반환
		return render(request, 'index.html')

	3) http://localhost:8000/polls/ 
	 접속, 화면 확인
	 
	4) C:\python-Django\MyFirstWebPoll\polls\templates\index.html
	
3. 
	1) 
# C:\python-Django\MyFirstWebPoll\polls\urls.py

	# http://localhost:8080/polls/<숫자>
    # http://localhost:8080/polls/<숫자>/
    # <int>/ => 숫자 하나가 인자로 들어옴을 명시함
    path('<int:question_id>/', views.detail, name="detail"),
	
	2)  # C:\python-Django\MyFirstWebPoll\polls\views.py
	from django.shortcuts import render, get_object_or_404
	
	def detail(request, question_id):
		# 로직 처리
		# 아까는 모든 Question 개체를 다 구해서 리스트로 만들었는데,
		# 이번에는 특정 Question 객체 1개만 구해야 한다.

		tmp = get_object_or_404(Question, pk=question_id)
		context = {"question": tmp}
		return render(request, 'detail.html', context)
	
	3) C:\python-Django\MyFirstWebPoll\polls\templates\detail.html