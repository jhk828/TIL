210119 화

- String.length()
- Array.length()
- Arrays.toString(배열)

- int intArray[] = {-3, -1, 1, 3, 5}; // Array Constant
	- 한번 할당된 값을 변경할 수 없다.
	- Array Constant는 선언과 동시에 초기화해야한다.
	- Array 요소 중 값을 할당받지 않은 요소는 default value 값을 가진다.
		원래 local variable은 default value 값을 가지지 않는다.
	- Array Constants는 동일 변수에 새로운 배열 할당 불가
- System.arraycopy(시작obj, 시작pos, 도착obj, 도착pos, length)
- 다차원 배열이라 하더라도, 각 배열마다 길이가 모두 같을 필요는 없다. 어차피 각자 referencing함

- java.util.Scanner
	.hasNex()
	.next()
	.hasNextXXX()
	.nextXXX()
	.nextLine()
	.nextChar() X ← .next().charAt(0)

-----------------------------------

210121 수
- Switch~Case (정수 / 문자 / 문자열)
 - Switch~Case (byte / short / int / char / String)
 - long은 wrong
 - defalt는 맨 뒤에 넣는 것을 권장하지만 앞에 넣어도 오류는 나지 않음
 
- 배열선언과 데이터 초기화하는 부분을 따로 작성할 수 없음!!!!!!!
  int [] su; // 배열선언
         su = {1,2,3,4,5}; // 배열초기화   (X)
		 su = new int[]{1, 2, 3, 4, 5}; // 배열 초기화 가능!! (O)
  
  int []su = {1,2,3,4,5}; // 선언과 초기화 (O)
  
- 2차원 배열에서 열 크기는 가변적이다.
	int [ ][ ] nums = new int [ 3 ] [  ];
	nums[0]=new int[2]; 
	nums[1]=new int[3]; 
	nums[2]=new int[1]; 

- 자바는 GC가 메모리 관리를 해주지만
  IO, DataBase (공유하는 자원) 관련 객체는 반환을 해줘야 한다.=> close()

- 배열 주소 복사
	// 원본 : su배열, 타겟 su3 배열
	int[] su3 = su; // new int[su.length]; // su 배열의 메모리 주소를 복사!!
		// su, su3 배열은 같은 메모리 주소를 참조!!!!!!!!!!
	
	su3[2] = 33; // su[2]도 변경됨!!

- Arrays.sort(배열)

- random 생성은 Math.random보다 이게 더 효율적이다.
	Random generator = new Random(); // 객체 생성
	int randomNum = generator.nextInt(45) + 1;
